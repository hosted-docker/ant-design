# When pushing a tag. this workflow will trigger site deployment and fixed version address comments

name: Daily Tag Sites

env:
  # Required, URL to upstream (fork base)
  UPSTREAM_URL: "https://github.com/ant-design/ant-design.git"
  # Required, token to authenticate bot, could use ${{ secrets.GITHUB_TOKEN }}
  # Over here, we use a PAT instead to authenticate workflow file changes.
  WORKFLOW_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Optional, defaults to main
  UPSTREAM_BRANCH: "master"
  # Optional, defaults to UPSTREAM_BRANCH
  DOWNSTREAM_BRANCH: ""
  # Optional fetch arguments
  FETCH_ARGS: ""
  # Optional merge arguments
  MERGE_ARGS: "--no-ff"
  # Optional push arguments
  PUSH_ARGS: ""
  # Optional toggle to spawn time logs (keeps action active)
  SPAWN_LOGS: "false" # "true" or "false"

on:
  schedule:
    - cron: '0 7 * * *' # ron on 7am every day
  # Allows manual workflow run (must in default branch to work)
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync-upstream:
    runs-on: ubuntu-latest
    steps:
      - name: GitHub Sync to Upstream Repository
        uses: dabreadman/sync-upstream-repo@v1.3.0
        with:
          upstream_repo: ${{ env.UPSTREAM_URL }}
          upstream_branch: ${{ env.UPSTREAM_BRANCH }}
          downstream_branch: ${{ env.DOWNSTREAM_BRANCH }}
          token: ${{ env.WORKFLOW_TOKEN }}
          fetch_args: ${{ env.FETCH_ARGS }}
          merge_args: ${{ env.MERGE_ARGS }}
          push_args: ${{ env.PUSH_ARGS }}
          spawn_logs: ${{ env.SPAWN_LOGS }}

  # Prepare node modules. Reuse cache if available
  setup:
    name: Prepare node modules
    runs-on: ubuntu-latest
    needs: sync-upstream
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: cache package-lock.json
        uses: actions/cache@v4
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: create package-lock.json
        run: npm i --package-lock-only --ignore-scripts

      - name: hack for single file
        run: |
          if [ ! -d "package-temp-dir" ]; then
            mkdir package-temp-dir
          fi
          cp package-lock.json package-temp-dir
      - name: cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: npm ci

  build-site:
    name: build site
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: restore cache from package-lock.json
        uses: actions/cache@v4
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}
      - name: add content path
        run: |
          sed -i 's/manifest: {}/runtimePublicPath: {}, manifest: {basePath: "\/mirror\/ant-design-5\/",}, base: "\/mirror\/ant-design-5\/", publicPath: "\/mirror\/ant-design-5\/"/' .dumirc.ts

      - name: npm run site
        id: site
        run: npm run site
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"

      - name: zip zite
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r ant-design-5.zip _site

      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::ant-design-5_$(date +"%Y.%m.%d_%H_%M_%S")"
      - name: GH Release
        # You may pin to the exact commit or the version.
        # uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files:  ant-design-5.zip
